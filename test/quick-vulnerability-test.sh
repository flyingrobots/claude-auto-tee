#!/usr/bin/env bash
# Quick test to expose critical pipe injection vulnerabilities

set -euo pipefail

readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
readonly HOOK_SCRIPT="$PROJECT_ROOT/src/claude-auto-tee.sh"

test_command() {
    local name="$1"
    local command="$2"
    
    echo "Testing: $name"
    echo "Command: $command"
    
    local input="{\"tool\":{\"name\":\"Bash\",\"input\":{\"command\":\"$command\"}},\"timeout\":null}"
    
    echo "Input JSON:"
    echo "$input" | jq . 2>/dev/null || echo "$input"
    
    echo "Hook Output:"
    echo "$input" | bash "$HOOK_SCRIPT" 2>&1 | head -20
    echo "----------------------------------------"
    echo
}

echo "======= CRITICAL VULNERABILITY TESTS ======="

# Test 1: Multiple pipes (exposes broken logic)
test_command "Multiple Pipes" "echo test | grep test | head -1"

# Test 2: Quoted pipes (exposes quote handling issues)  
test_command "Quoted Pipes" "echo \"data | more\" | head"

# Test 3: Command injection via pipe
test_command "Command Injection" "echo test | head; rm -rf /tmp/test"

# Test 4: Complex structure that breaks parsing
test_command "Complex Structure" "{ echo start; echo end; } | grep start"

echo "======= TESTS COMPLETE ======="